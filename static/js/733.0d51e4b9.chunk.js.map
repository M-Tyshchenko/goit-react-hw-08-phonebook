{"version":3,"file":"static/js/733.0d51e4b9.chunk.js","mappings":"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","sources":["pages/ContactsPage/Contacts.styled.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","pages/ContactsPage/Contacts.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  /* margin: 0 auto; */\n  padding: 0 20px 16px;\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 16px;\n  font-weight: 700;\n  font-size: 32px;\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin-bottom: 16px;\n`;\n\nexport const FormItem = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const FormField = styled.input`\n  border-color: #eef0f2;\n  border-style: solid;\n  font-size: 16px;\n  font-weight: 400;\n\n  &:hover,\n  &:focus {\n    box-shadow: rgba(3, 102, 214, 0.3) 0px 0px 0px 3px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { FormField, FormItem, Wrapper } from './Filter.styled';\nimport { changeFilterByName } from 'redux/filterSlice';\nimport { selectFilterByName } from 'redux/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filterByName = useSelector(selectFilterByName);\n\n  return (\n    <Wrapper>\n      <FormItem>\n        Find contacts by name\n        <FormField\n          type=\"text\"\n          value={filterByName}\n          onChange={evt => dispatch(changeFilterByName(evt.target.value))}\n        />\n      </FormItem>\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: disc;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  /* justify-content: space-between; */\n  gap: 16px;\n`;\n\nexport const Marker = styled.div`\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  background-color: #000;\n`;\n\nexport const DeleteBtn = styled.button`\n  margin-left: auto;\n  padding: 4px 8px;\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\n  background-color: #fff;\n  border-color: transparent;\n  width: fit-content;\n  border-radius: 8px;\n\n  &:hover,\n  &:focus {\n    box-shadow: rgba(3, 102, 214, 0.3) 0px 0px 0px 3px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { DeleteBtn, List, ListItem, Marker } from './ContactList.styled';\nimport { selectVisibleContacts } from 'redux/selectors';\nimport { deleteContact } from 'redux/operations';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <List>\n      {contacts.map(contact => (\n        <ListItem key={contact.id}>\n          <Marker></Marker>\n          <p>\n            {contact.name}: {contact.number}\n          </p>\n\n          <DeleteBtn onClick={() => dispatch(deleteContact(contact.id))}>\n            Delete\n          </DeleteBtn>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { Container } from './Contacts.styled';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { selectError, selectIsLoading } from 'redux/selectors';\nimport { fetchContacts } from 'redux/operations';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Filter />\n      {isLoading && !error && (\n        <ThreeDots\n          height=\"80\"\n          width=\"80\"\n          radius=\"9\"\n          color=\"pink\"\n          ariaLabel=\"three-dots-loading\"\n          wrapperStyle={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n          wrapperClassName=\"\"\n          visible={true}\n        />\n      )}\n      <ContactList />\n    </Container>\n  );\n};\n\nexport default Contacts;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilterByName = state => state.filter.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilterByName],\n  (contacts, filter) =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    )\n);\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Wrapper","_templateObject2","FormItem","FormField","_templateObject3","Filter","dispatch","useDispatch","filterByName","useSelector","selectFilterByName","_jsx","children","_jsxs","type","value","onChange","evt","changeFilterByName","target","List","ListItem","Marker","DeleteBtn","_templateObject4","ContactList","contacts","selectVisibleContacts","map","contact","name","number","onClick","deleteContact","id","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","ThreeDots","height","width","radius","color","ariaLabel","wrapperStyle","display","justifyContent","alignItems","wrapperClassName","visible","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","items","filter","toLowerCase","includes"],"sourceRoot":""}